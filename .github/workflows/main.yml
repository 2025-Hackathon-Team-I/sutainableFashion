name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  AWS_REGION: ap-southeast-2
  AWS_S3_BUCKET: test-gitget-deploy-bucket
  AWS_CODE_DEPLOY_APPLICATION: Test-GitGet-Application-CD
  AWS_CODE_DEPLOY_GROUP: Test-GitGet-Deployment-Group

jobs:
  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 애플리케이션 설정 파일 생성 (base64 디코딩 방식)
      - name: Generate application.yml and profiles
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION }}" | base64 --decode > ./src/main/resources/application.yml
          echo "${{ secrets.PROD }}" | base64 --decode > ./src/main/resources/application-prod.yml

      # Gradle 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # 빌드
      - name: Build
        run: ./gradlew bootJar -x test

      # zip 압축 (배포용)
      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      # AWS 인증 설정
      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.TEST_CICD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TEST_CICD_SECRET_KEY }}

      # S3 업로드
      - name: Upload to S3
        run: aws s3 cp --region ${{ env.AWS_REGION }} ./$GITHUB_SHA.zip s3://$AWS_S3_BUCKET/$GITHUB_SHA.zip

      # CodeDeploy로 EC2 배포 시작
      - name: EC2에 배포
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} \
            --s3-location bucket=$AWS_S3_BUCKET,key=$GITHUB_SHA.zip,bundleType=zip